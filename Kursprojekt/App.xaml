<Application x:Class="Kursprojekt.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Kursprojekt"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:Conv="clr-namespace:Kursprojekt.Converter" 
             xmlns:mw="http://metro.mahapps.com/winfx/xaml/controls">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Metro Mahaps-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/light.teal.xaml"/>

                <!-- MaterialDesign-->
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Cyan.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--SolidColorBrush-->
            <SolidColorBrush x:Key="AppColorCyan"      Color="#FF038F9E"/>
            <SolidColorBrush x:Key="AppColorCyanHover" Color="#FF89F0F3"/>
            <!--Color-->
            <Color x:Key="AppCyanColor">#FF038F9E</Color>
            <Color x:Key="AppCyanHoverColor">#FF89F0F3</Color>
            <Color x:Key="AppWhiteColor">#FFFDFDFD</Color>
            <!--#endregion-->

            <!--Converters-->
            <Conv:BoolToVisibilityConverter x:Key="BoolToVisConverter"/>
            <Conv:BytesArrayToBitmapImageConverter x:Key="BytesArrayToBitmapImageConverter"/>
            <Conv:DateYearOneToEmptyDateConverter x:Key="DateYearOneToEmptyDateConverter"/>
            <Conv:BoolToVerkauftTextConverter x:Key="BoolToVerkauftTextConverter"/>
            <Conv:BoolToVerfuegbarkeitTextConverter x:Key="BoolToVerfuegbarkeitTextConverter"/>
            <Conv:BoolToGreenConverter x:Key="BoolToGreenConverter"/>

            <!--Button-->
            <Style x:Key="GoBackBtnStyle" TargetType="Button" BasedOn="{StaticResource MaterialDesignPaperButton}">
                <Setter Property="Background" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="4 0 20 0"/>
            </Style>

            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="6 0"/>
                <Setter Property="Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="FontSize" Value="26"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <md:Card Name="BtnCard"
                                     md:ShadowAssist.ShadowDepth="Depth1" 
                                     md:ShadowAssist.ShadowEdges="Bottom">
                                <Border VerticalAlignment="Center" 
                                        Padding="6 0" 
                                        BorderThickness="1 0"
                                        BorderBrush="{StaticResource AppColorCyan}">
                                    <ContentPresenter HorizontalAlignment="Center"/>
                                </Border>
                            </md:Card>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BtnCard" Property="md:ShadowAssist.ShadowDepth" Value="Depth3"/>
                                    <Setter TargetName="BtnCard" Property="md:ShadowAssist.ShadowEdges" Value="All"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--RadioButton-->
            <Style x:Key="BtnMainMenuStyle" TargetType="RadioButton">
                <Setter Property="Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="6 0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border x:Name="border">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="8"/>
                                    </Grid.RowDefinitions>
                                    <!--ContentPresenter-->
                                    <Border Grid.Row="0" VerticalAlignment="Bottom">
                                        <ContentPresenter HorizontalAlignment="Center" />
                                    </Border>

                                    <!--borderCurser-->
                                    <Border x:Name="borderCurser" Grid.Row="1" 
                                            VerticalAlignment="Top" 
                                            Height="4" Background="{StaticResource AppColorCyan}"
                                            Opacity="0">
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <!--Not IsEnabled-->
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.8"/>
                                </Trigger>

                                <!--IsChecked-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="borderCurser" 
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1" 
                                                                 Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="borderCurser" 
                                                                 Storyboard.TargetProperty="Opacity" 
                                                                 To="0" 
                                                                 Duration="0:0:0.4"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BtnUnderPageMenuStyle" TargetType="RadioButton">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Margin" Value="6 0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="8"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="ContentBorder" Grid.Row="0" 
                                            Background="{StaticResource AppColorCyan}"
                                            BorderThickness="0" BorderBrush="White">
                                        <Border.Effect>
                                            <DropShadowEffect Color="{StaticResource AppCyanColor}" Direction="-90" ShadowDepth="2"/>
                                        </Border.Effect>
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>

                                    <Border x:Name="CurserBorder" Grid.Row="1"
                                            Height="8" Margin="0 2 0 0" 
                                            BorderThickness="0 2 0 0" 
                                            BorderBrush="White"
                                            Background="{StaticResource AppColorCyan}"
                                            Opacity="0">
                                    </Border>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetName="ContentBorder" 
                                                                    Storyboard.TargetProperty="BorderThickness" To="0 0 0 1" 
                                                                    Duration="0:0:0.2">
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>

                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetName="ContentBorder" 
                                                                    Storyboard.TargetProperty="BorderThickness" To="0" 
                                                                    Duration="0:0:0.3">
                                                </ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>

                                </MultiTrigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="CurserBorder" 
                                                                 Storyboard.TargetProperty="Opacity" To="1" 
                                                                 Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="CurserBorder" 
                                                                 Storyboard.TargetProperty="Opacity" To="0" 
                                                                 Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TextBlock-->
            <Style x:Key="TitelTxtBxStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="FontSize" Value="36"/>
                <Setter Property="FontFamily" Value="Forte"/>
                <Setter Property="Margin" Value="4 0"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
            </Style>

            <Style x:Key="MessageTxtBlckStyle" TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Foreground" Value="DarkRed"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            
            <!--TextBox-->
            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Cursor" Value="Arrow"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderBrush" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:HintAssist.Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:HintAssist.HintOpacity" Value="1"/>
                <Setter Property="md:HintAssist.FloatingScale" Value="1.2"/>
            </Style>
            
            <Style x:Key="TextBxAngabenStyle" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Cursor" Value="Arrow"/>
                <Setter Property="FontFamily" Value="Roboto"/>
                <Setter Property="BorderBrush" Value="{StaticResource AppColorCyan}"/>                
                <Setter Property="md:HintAssist.Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:HintAssist.HintOpacity" Value="1"/>
                <Setter Property="md:HintAssist.FloatingScale" Value="1.2"/>                
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColorCyan}"/>                
                <Setter Property="md:ValidationAssist.PopupPlacement" Value="Bottom"/>
                <Setter Property="md:ValidationAssist.UsePopup" Value="False"/>                
                <Setter Property="md:ValidationAssist.Background" Value="Transparent"/>
                <Setter Property="md:ValidationAssist.OnlyShowOnFocus" Value="True"/>                
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
            </Style>

            <!--TabButtonTemplate-->
            <DataTemplate x:Key="TabButtonTemplate" DataType="Border">
                <Border MinWidth="250">
                    <Border BorderBrush="{StaticResource AppColorCyan}"
                            Width="{Binding}" Height="40" Cursor="Hand" Margin="4" 
                            CornerRadius="10">
                        <Label Content="{Binding }" FontSize="20" 
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center" VerticalContentAlignment="Center"
                               FontWeight="ExtraBold" Padding="10 2"
                               Foreground="{StaticResource AppColorCyan}">
                        </Label>

                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="BorderThickness" Value="6 1"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.1"
                                                                        Storyboard.TargetProperty="BorderThickness"
                                                                        To="1 1 1 4">
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Duration="0:0:0.3"
                                                                        Storyboard.TargetProperty="BorderThickness"
                                                                        To="6 1">
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </Border>
            </DataTemplate>

            <!--DataGrid Styles-->
            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="FontWeight" Value="ExtraBold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Border Background="{StaticResource AppColorCyan}">
                                <ContentPresenter UseLayoutRounding="True"
                                                  SnapsToDevicePixels="True"
                                                  HorizontalAlignment="Left" 
                                                  VerticalAlignment="Center">
                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridCell}" BasedOn="{ StaticResource MaterialDesignDataGridCell}">
                <Setter Property="Height" Value="38"/>
                <Setter Property="Padding" Value="0 6"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="FontSize" Value="24"/>
                        <Setter Property="Padding" Value="0 4"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{StaticResource AppColorCyanHover}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                <Setter Property="Height" Value="38"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="BorderBrush" Value="{StaticResource AppColorCyanHover}"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <Trigger Property="DataGridRow.IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightGray"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Trigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="DataGridCell.IsSelected" Value="True" />
                            <Condition Property="DataGridCell.IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Background" Value="{StaticResource AppColorCyanHover}"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="GridLinesVisibility" Value="All"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="IsReadOnly" Value="True"/>
                <Setter Property="CanUserAddRows" Value="False"/>
            </Style>

            <!--ComboBoxItem und ComboBox-->
            <!--ComboBoxItem-->
            <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{StaticResource MaterialDesignPaper}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppColorCyanHover}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource AppColorCyan}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--ComboBox-->
            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFilledComboBox}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Padding" Value="0 6 0 2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="BorderBrush" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColorCyan}"/>
            </Style>

            <!--DatePicker Property="DisplayDateStart" Value="{x:Static system:DateTime.Now}"-->
            <Style TargetType="DatePicker" BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}">
                <Setter Property="SelectedDateFormat" Value="Short"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:TextFieldAssist.UnderlineBrush" Value="{StaticResource AppColorCyan}"/>
                <Setter Property="md:HintAssist.FloatingScale" Value="1.2"/>
                <Setter Property="md:HintAssist.Foreground" Value="{StaticResource AppColorCyan}"/>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
